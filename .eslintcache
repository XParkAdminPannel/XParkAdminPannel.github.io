[{"C:\\Users\\MRX\\Desktop\\adminkp\\src\\index.js":"1","C:\\Users\\MRX\\Desktop\\adminkp\\src\\reportWebVitals.js":"2","C:\\Users\\MRX\\Desktop\\adminkp\\src\\App.js":"3","C:\\Users\\MRX\\Desktop\\adminkp\\src\\fire.js":"4","C:\\Users\\MRX\\Desktop\\adminkp\\src\\Pannel.js":"5","C:\\Users\\MRX\\Desktop\\adminkp\\src\\Login.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1845,"mtime":1608412832223,"results":"10","hashOfConfig":"8"},{"size":514,"mtime":1608385522071,"results":"11","hashOfConfig":"8"},{"size":1020,"mtime":1608415381936,"results":"12","hashOfConfig":"8"},{"size":848,"mtime":1608411911325,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1n74o7e",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MRX\\Desktop\\adminkp\\src\\index.js",[],["29","30"],"C:\\Users\\MRX\\Desktop\\adminkp\\src\\reportWebVitals.js",[],"C:\\Users\\MRX\\Desktop\\adminkp\\src\\App.js",["31","32","33"],"import React, { useState, useEffect } from \"react\";\nimport fire from \"./fire\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport Pannel from \"./Pannel\";\n\nconst App = () => {\n\n  const [user, setUser] = useState(\"\");\n  const [pw, setPw] =  useState(\"\");\n  const [pwError, setPwError] =  useState(\"\");\n  const [hasAcc, setHasAcc] = useState(\"\");\n\n  const clearInputs = () => {\n    setPw(\"\");\n  };\n\n  const clearErrors = () => {\n    setPwError(\"\");\n  };\n\n  const handleLogin = () => {\n\n    clearErrors();\n    var adminPw_ref = fire.database().ref(\"XPARK_CONSTANTS/admin_password/value\");\n\n    adminPw_ref.on(\"value\", (snapshot) => {\n      if(snapshot.val() == pw) {\n        fire.auth().signInWithEmailAndPassword(\"admin@xpark.com\", \"admin0\")\n                    .catch( (err) => {\n                      switch(err.code) {\n                        case \"auth/wrong-password\":\n                          setPwError(err.message);\n                      }\n                    });\n      } else {\n        setPwError(\"Invalid Password\");\n      }\n                  \n    }, (err) => {\n      setPwError(\"The read password where from database failed: \" + err.code);\n    });\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged( (user)  => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n  return (\n    <div className = \"App\">\n\n      {user ? (\n          <Pannel handleLogout={handleLogout}/>\n      ) : (\n          <Login \n          pw={pw} \n          setPw={setPw}\n          handleLogin={handleLogin}\n          hasAcc={hasAcc}\n          setHasAcc={setHasAcc}\n          pwError={pwError}\n        />\n      )}  \n    </div>\n  );\n};\n\nexport default App;","C:\\Users\\MRX\\Desktop\\adminkp\\src\\fire.js",[],"C:\\Users\\MRX\\Desktop\\adminkp\\src\\Pannel.js",["34"],"import React, { useState, useEffect} from \"react\";\r\nimport fire from \"./fire\";\r\n\r\nconst Pannel = ({handleLogout}) => {\r\n\r\n    const [Discount, setDiscount] = useState(\"\");\r\n\r\n    const handleDiscount = () => {\r\n        fire.database().ref(\"XPARK_CONSTANTS/discount\").set({\r\n                value: Discount\r\n        });\r\n    }\r\n\r\n    return(\r\n        <section className=\"Pannel\">\r\n            <nav>\r\n                <h2>Welcome to X-Park Admin Pannel</h2>\r\n                <button onClick={handleLogout}>Logout</button>\r\n            </nav>\r\n            <div className=\"discContainer\">\r\n                <label>Discount Amount</label>\r\n                <input type=\"number\"\r\n                        autofocus\r\n                        required\r\n                        value={Discount}\r\n                        onChange={(e) => setDiscount(e.target.value)}\r\n                />\r\n                <button onClick={handleDiscount}>Send Discount</button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Pannel;","C:\\Users\\MRX\\Desktop\\adminkp\\src\\Login.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":28,"column":25,"nodeType":"41","messageId":"42","endLine":28,"endColumn":27},{"ruleId":"43","severity":1,"message":"44","line":31,"column":23,"nodeType":"45","messageId":"46","endLine":34,"endColumn":24},{"ruleId":"47","severity":1,"message":"48","line":58,"column":6,"nodeType":"49","endLine":58,"endColumn":8,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":27,"nodeType":"53","messageId":"54","endLine":1,"endColumn":36},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["57"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [authListener]",{"range":"60","text":"61"},[1415,1417],"[authListener]"]