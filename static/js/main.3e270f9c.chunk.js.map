{"version":3,"sources":["fire.js","Login.js","Pannel.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","props","pw","setPw","handleLogin","pwError","className","type","autofocus","required","value","onChange","e","target","onClick","Pannel","handleLogout","useState","Discount","setDiscount","dID","semt","setsemt","country","setcountry","name","setname","postCode","setpostCode","phone","setphone","latitude","setlatitude","longitude","setlongitude","capacity","setcapacity","placeholder","carpark","repo","repoNum","database","ref","on","snapshot","numChildren","parseInt","coordinates","parseFloat","freeArea","generalid","toString","id","used","set","error","console","log","App","user","setUser","setPwError","hasAcc","setHasAcc","authListener","auth","onAuthStateChanged","useEffect","signOut","val","signInWithEmailAndPassword","catch","err","code","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e270f9c.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDM6BfefxnTromSl8BmEoGCGaJllI2ivqM\",\r\n    authDomain: \"xpark-492ae.firebaseapp.com\",\r\n    databaseURL: \"https://xpark-492ae.firebaseio.com\",\r\n    projectId: \"xpark-492ae\",\r\n    storageBucket: \"xpark-492ae.appspot.com\",\r\n    messagingSenderId: \"705611960944\",\r\n    appId: \"1:705611960944:web:fb175c971f725b4dac5ab5\",\r\n    measurementId: \"G-RJN23G402P\"\r\n  };\r\n\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fire;","import React from \"react\";\r\n\r\nconst Login = (props) => {\r\n\r\n    const { \r\n        pw, \r\n        setPw, \r\n        handleLogin, \r\n        pwError\r\n    } = props;\r\n\r\n    return(\r\n        <section className=\"login\">\r\n            <div className=\"loginContainer\">\r\n                <h1>X-Park Admin Pannel</h1>\r\n\r\n                <label>Password</label>\r\n                <input type=\"password\"\r\n                        autofocus\r\n                        required\r\n                        value={pw}\r\n                        onChange={(e) => setPw(e.target.value)}\r\n                />\r\n                <p className=\"errorMsg\">{pwError}</p>\r\n\r\n                <div className=\"btnContainer\">\r\n                    <button onClick={handleLogin}>Sign in</button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect} from \"react\";\r\nimport fire from \"./fire\";\r\nimport \"./Discount\";\r\n\r\nconst Pannel = ({handleLogout}) => {\r\n\r\n    const [Discount, setDiscount] = useState(\"\");\r\n\r\n    const handleDiscount = () => {\r\n        fire.database().ref(\"XPARK_CONSTANTS/discount\").set({\r\n                value: Discount\r\n        });\r\n    }\r\n\r\n    const dID = \"1000000\";\r\n    const [semt, setsemt] = useState(\"\");\r\n    const [country, setcountry] = useState(\"\");\r\n    const [name, setname] = useState(\"\");\r\n    const [postCode, setpostCode] = useState(\"\");\r\n    const [phone, setphone] = useState(\"\");\r\n    const [latitude, setlatitude] = useState(\"\");\r\n    const [longitude, setlongitude] = useState(\"\");\r\n    const [capacity, setcapacity] = useState(\"\");\r\n\r\n    const handleAddCarPark = () => {\r\n\r\n        var carpark;\r\n        var repo = postCode + \"_\" + semt + \"_\" + country;\r\n        var repoNum = dID;\r\n\r\n        /*fire.database().ref(\"CAR_PARKS/\" + repo).on('value', snapshot => {\r\n            repoNum = snapshot.numChildren() + parseInt(dID);\r\n        });*/\r\n\r\n        fire.database().ref(\"CAR_PARKS/\" + repo).on('value', snapshot => {\r\n            repoNum = snapshot.numChildren() + parseInt(dID);\r\n        });\r\n\r\n        try {\r\n            carpark = {\r\n                capacity: parseInt(capacity),\r\n                coordinates: {\r\n                    latitude: parseFloat(latitude),\r\n                    longitude: parseFloat(longitude),\r\n                },\r\n                freeArea: parseInt(capacity),\r\n                generalid: postCode + \"_\" + semt + \"_\" + country + \"-\" + repoNum.toString(),\r\n                id: repoNum.toString(),\r\n                name: name,\r\n                phone: phone,\r\n                used: 0,\r\n            };\r\n        \r\n            fire.database().ref(\"CAR_PARKS/\" + repo + \"/\" + repoNum).set(carpark);\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        console.log(carpark);\r\n    }\r\n\r\n    return(\r\n        <section className=\"Pannel\">\r\n            <nav>\r\n                <h2>X-Park Admin Paneline Hoşgeldiniz</h2>\r\n                <button onClick={handleLogout}>Çıkış Yap</button>\r\n            </nav>\r\n\r\n            <div className=\"addCarParkContainer\">\r\n\r\n                <label>Otopark Ekle</label>\r\n\r\n                <input type=\"text\"\r\n                    autofocus\r\n                    required\r\n                    placeholder=\"Şehir\"\r\n                    value={country}\r\n                    onChange={(e) => setcountry(e.target.value)}\r\n                />\r\n\r\n                <input type=\"text\"\r\n                    autofocus\r\n                    required\r\n                    placeholder=\"Semt\"\r\n                    value={semt}\r\n                    onChange={(e) => setsemt(e.target.value)}\r\n                />\r\n\r\n                <input type=\"text\"\r\n                    placeholder=\"Otopark ismi\"\r\n                    autofocus\r\n                    required\r\n                    value={name}\r\n                    onChange={(e) => setname(e.target.value)}\r\n                />\r\n\r\n                <input type=\"text\"\r\n                    placeholder=\"Posta Kodu\"\r\n                    autofocus\r\n                    required\r\n                    value={postCode}\r\n                    onChange={(e) => setpostCode(e.target.value)}\r\n                />\r\n                \r\n                <input type=\"text\"\r\n                    autofocus\r\n                    required\r\n                    placeholder=\"Telefon numarası\"\r\n                    value={phone}\r\n                    onChange={(e) => setphone(e.target.value)}\r\n                />\r\n\r\n                <input type=\"text\"\r\n                    autofocus\r\n                    required\r\n                    placeholder=\"Enlem (Konum)\"\r\n                    value={latitude}\r\n                    onChange={(e) => setlatitude(e.target.value)}\r\n                />\r\n\r\n                <input type=\"text\"\r\n                    autofocus\r\n                    required\r\n                    placeholder=\"Boylam (Konum)\"\r\n                    value={longitude}\r\n                    onChange={(e) => setlongitude(e.target.value)}\r\n                />\r\n\r\n                <input type=\"number\"\r\n                    autofocus\r\n                    required\r\n                    placeholder=\"Kapasite\"\r\n                    value={capacity}\r\n                    onChange={(e) => setcapacity(e.target.value)}\r\n                />\r\n\r\n                <button onClick={handleAddCarPark}>Ekle</button>\r\n            </div>\r\n\r\n            <div className=\"discContainer\">\r\n                <label>İndirim Miktarı</label>\r\n                <input type=\"number\"\r\n                        autofocus\r\n                        required\r\n                        value={Discount}\r\n                        onChange={(e) => setDiscount(e.target.value)}\r\n                />\r\n                <button onClick={handleDiscount}>İndirimi Herkese Gönder</button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Pannel;","import React, { useState, useEffect } from \"react\";\nimport fire from \"./fire\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport Pannel from \"./Pannel\";\n\nconst App = () => {\n\n  const [user, setUser] = useState(\"\");\n  const [pw, setPw] =  useState(\"\");\n  const [pwError, setPwError] =  useState(\"\");\n  const [hasAcc, setHasAcc] = useState(\"\");\n\n  const clearInputs = () => {\n    setPw(\"\");\n  };\n\n  const clearErrors = () => {\n    setPwError(\"\");\n  };\n\n  const handleLogin = () => {\n\n    clearErrors();\n    var adminPw_ref = fire.database().ref(\"XPARK_CONSTANTS/admin_password/value\");\n\n    adminPw_ref.on(\"value\", (snapshot) => {\n      if(snapshot.val() == pw) {\n        fire.auth().signInWithEmailAndPassword(\"admin@xpark.com\", \"admin0\")\n                    .catch( (err) => {\n                      switch(err.code) {\n                        case \"auth/wrong-password\":\n                          setPwError(err.message);\n                      }\n                    });\n      } else {\n        setPwError(\"Invalid Password\");\n      }\n                  \n    }, (err) => {\n      setPwError(\"The read password where from database failed: \" + err.code);\n    });\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged( (user)  => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n  return (\n    <div className = \"App\">\n\n      {user ? (\n          <Pannel \n            handleLogout={handleLogout}\n          />\n      ) : (\n          <Login \n            pw={pw} \n            setPw={setPw}\n            handleLogin={handleLogin}\n            hasAcc={hasAcc}\n            setHasAcc={setHasAcc}\n            pwError={pwError}\n        />\n      )}  \n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}